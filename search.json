[{"title":"LeetCode刷题记录","path":"/2024/12/21/leetcode/","content":"记录刷题的每一天！感受逐渐变强的自己！ 环境配置VsCode + labuladong vscodevscode的安装无需多言了 leetcode 插件在leetcode网站上刷题体验感实际上是很一般的。主要是补全差劲；字体难看；等等等。所有就有了leetcode刷题插件的诞生。可以自由的在vscode里读题、写代码、提交代码。 但很不好的是，它给你生成的代码内容是不包含头文件的，会导致vscode报错飘红，体验感依旧不足够高。 labuladong的算法插件labuladong大佬在leetcode插件上进一步开发的。属于是弥补了原插件的许多不足之处。具体的说法和细则，请看官网。体验感已经是本人能找到的非常棒的了。不过还有缺点就是，不能直接构造main函数，构建测试用例，使得可以直接开始debug。 另外仍需注意，该插件只能用cookie登录。需要在网络控制台中，抓一个带有cookie字样的包然后右键， Copy as cURL (bash)，随后开启新世界大门！ 547 省份数量老听并查集的大名，但是一直没有学习过，直接拿上547题来练手。 并查集学过一遍之后，并查集应该是要用数组表示的树？很吊的。 反正啥操作前都加个find_parent就对了！ 构造函数一个并查集可以有n个节点，初始化时，各个节点都先自己指向自己，每个节点都是一个单独的集合。 123456UnionFind(int n)&#123; array_.resize(n); for(int i = 0 ; i &lt; n;i++)&#123; array_[i] = i; // 并查集自己先指向自己 &#125;&#125; 合并函数合并函数就是一个集合的父节点，指向另一个集合的父节点，这样他们就合并成了一撮，变成了同一个集合。 1234void to_union(int child, int parent)&#123; // ! 注意，并查集的操作，是对父节点的操作，一切要以父节点为准 array_[find_parent(child)] = find_parent(parent);&#125; 其他的合并方式假如union(1,2)、union(2,3)、union(3,4)，这样循环的调用，那节点之间的指向关系，明显是一个链状的，当然这是最坏的情况，有没有什么好大压缩的方法呢？ 其实就是希望合并之后，树的高度尽可能的矮嘛，那可以额外的增加一个数组，记录每个集合的高度，合并的时候，矮的指向高的，不就不会导致高度过分的增加了嘛。 当然，更佳的一个做法是，用上路径压缩。 寻根函数（带路径压缩）讲解视频 12345678910int find_parent(int i)&#123; // 视频中所述，并查集要注意 !路径压缩! 不然一个集合里的排布是一长串，复杂度不是最优 if (array_[i] == i)&#123; return i; // 已经找到根节点了 &#125;else&#123; array_[i] = find_parent(array_[i]); // 这里就是在做路径压缩 return array_[i]; &#125;&#125; 一共有多少集合呢反正我是用一个集合，但是感觉实际是很愚蠢的！ 1234567int get_num()&#123; unordered_set&lt;int&gt; statistic_set; for (int i = 0; i &lt; array_.size(); i++)&#123; statistic_set.insert(find_parent(i)); &#125; return statistic_set.size();&#125; 可以在每次合并，就将合并次数++！那集合的数量，不就是 size - merge_count吗！ 不解但是并查集的时间复杂度咋算呢？回头再学习学习吧。"},{"title":"Hello World","path":"/2024/12/21/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]